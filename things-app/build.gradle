/*
 * Copyright 2016, The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'com.leinardi.android.checkstyle'

checkstyle {
    ignoreFailures = true // Whether this task will ignore failures and continue running the build.
    configFile rootProject.file('config/checkstyle/checkstyle.xml')
    // The Checkstyle configuration file to use.
    toolVersion = '8.4' // The version of Checkstyle you want to be used
}

android {
    compileSdkVersion COMPILE_SDK_VERSION as int
    buildToolsVersion BUILD_TOOLS_VERSION as String

    defaultConfig {
        applicationId "com.leinardi.androidthings.kuman.sm9"
        minSdkVersion 24
        targetSdkVersion TARGET_SDK_VERSION as int
        versionCode 1
        versionName "1.0"
        buildConfigField "String", "NEARBY_SERVICE_ID", "\"${NEARBY_SERVICE_ID}\""
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    def isKeystoreInfoAvailable = file(KEYSTORE_PATH).exists() && file(KEYSTORE_PROPERTIES_PATH).exists()

    signingConfigs {
        if (isKeystoreInfoAvailable) {
            release {
                Properties props = new Properties()
                props.load(new FileInputStream(file(KEYSTORE_PROPERTIES_PATH)))
                storeFile file(KEYSTORE_PATH)
                storePassword props['store.password']
                keyAlias props['key.alias']
                keyPassword props['key.password']
            }
        }
    }

    buildTypes {
        if (isKeystoreInfoAvailable) {
            release {
                minifyEnabled true
                shrinkResources true
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
                signingConfig signingConfigs.release
            }
        }
    }

}

dependencies {
    compileOnly 'com.google.android.things:androidthings:0.5.1-devpreview'
    implementation project(':common')
    implementation project(':pwr.a53.a')
    implementation 'com.android.support:support-annotations:27.0.1'
    implementation 'com.jakewharton.timber:timber:4.6.0'
    // Android Things Developer Preview has no mechanism to update GMS yet.
    // We use the Play Services version 11.0.0 (bundled in developer preview 5.1)
    //noinspection GradleDependency
    compile 'com.google.android.gms:play-services-nearby:11.0.4'
}
